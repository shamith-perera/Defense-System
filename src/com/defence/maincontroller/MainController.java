/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.defence.maincontroller;

import com.defence.utilities.DefenceObservableInterface;
import com.defence.utilities.Strength;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author shami
 */
public class MainController extends JFrame implements MainControllerInterface {

    private final DefenceObservableInterface defenceObservableInterface;

    /**
     * Creates new form MainController
     *
     * @param defenceObservableInterface
     */
    public MainController(DefenceObservableInterface defenceObservableInterface) {
        initComponents();
        setLocation(50, 0);
        setVisible(true);
        this.defenceObservableInterface = defenceObservableInterface;
        ImageIcon windowIcon = new ImageIcon("src/com/defence/icons/defence.png");
        setIconImage(windowIcon.getImage());

    }

    @Override
    public void sendMsg(String msg) {
        recievedMsgDisplay.append(msg + "\n");
    }

    public void addUnitsToComboList(JComboBox<Object> comboBox) {
        int lastSelectedIndex = comboBox.getSelectedIndex();
        comboBox.removeAllItems();
        Object[] allUnits = defenceObservableInterface.getAllUnits();
        for (Object unit : allUnits) {
            comboBox.addItem(unit);
        }
        comboBox.setSelectedIndex(lastSelectedIndex);
    }

    @Override
    public void reportStatusChange() {
        updateSelectedUnitStatus();
    }

    private void updateSelectedUnitStatus() {
        Object selectedUnit = unitTrackingComboBox.getSelectedItem();
        if (selectedUnit != null) {
            currentlyTrackingUnitLabel.setText(selectedUnit.toString());
            defenceObservableInterface.enableTrackingForUnit(selectedUnit);
        } else {
            JOptionPane.showMessageDialog(this, "Unit Not Selected", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgSendOptionBtnGroup = new javax.swing.ButtonGroup();
        areaStatusPanel = new javax.swing.JPanel();
        isAreaCleared = new javax.swing.JCheckBox();
        recievedMsgPanel = new javax.swing.JPanel();
        recievedMsgTitle = new javax.swing.JLabel();
        recievedMsgScrollPane = new javax.swing.JScrollPane();
        recievedMsgDisplay = new javax.swing.JTextArea();
        unitTrackingPanel = new javax.swing.JPanel();
        unitStatusScrollPane = new javax.swing.JScrollPane();
        unitStatusDisplay = new javax.swing.JTextArea();
        currentTrackingUnitTitle = new javax.swing.JLabel();
        currentlyTrackingUnitLabel = new javax.swing.JLabel();
        unitTrackingComboBox = new javax.swing.JComboBox<>();
        unitTrackingBtn = new javax.swing.JButton();
        untiStatusTrackingTitle = new javax.swing.JLabel();
        mainTitle = new javax.swing.JLabel();
        warStrengthPanel = new javax.swing.JPanel();
        warStrengthTitle = new javax.swing.JLabel();
        warStrengthSlider = new javax.swing.JSlider();
        sendMsgPanel = new javax.swing.JPanel();
        sendMsgTitle = new javax.swing.JLabel();
        sendMsgBtn = new javax.swing.JButton();
        sendMsgToAllUnits = new javax.swing.JRadioButton();
        sendMsgToSelectedUnit = new javax.swing.JRadioButton();
        msgSendComboBox = new javax.swing.JComboBox<>();
        sendMsgScrollPane = new javax.swing.JScrollPane();
        msgToSend = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Controller");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        areaStatusPanel.setBackground(new java.awt.Color(204, 204, 204));
        areaStatusPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        isAreaCleared.setBackground(new java.awt.Color(204, 204, 204));
        isAreaCleared.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        isAreaCleared.setText("Area Cleared");
        isAreaCleared.setOpaque(true);
        isAreaCleared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isAreaClearedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout areaStatusPanelLayout = new javax.swing.GroupLayout(areaStatusPanel);
        areaStatusPanel.setLayout(areaStatusPanelLayout);
        areaStatusPanelLayout.setHorizontalGroup(
            areaStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, areaStatusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(isAreaCleared)
                .addGap(16, 16, 16))
        );
        areaStatusPanelLayout.setVerticalGroup(
            areaStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, areaStatusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(isAreaCleared, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        recievedMsgPanel.setBackground(new java.awt.Color(204, 204, 204));
        recievedMsgPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        recievedMsgTitle.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        recievedMsgTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recievedMsgTitle.setText("Unit Messages");

        recievedMsgDisplay.setEditable(false);
        recievedMsgDisplay.setBackground(new java.awt.Color(255, 255, 204));
        recievedMsgDisplay.setColumns(20);
        recievedMsgDisplay.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        recievedMsgDisplay.setLineWrap(true);
        recievedMsgDisplay.setRows(5);
        recievedMsgScrollPane.setViewportView(recievedMsgDisplay);

        javax.swing.GroupLayout recievedMsgPanelLayout = new javax.swing.GroupLayout(recievedMsgPanel);
        recievedMsgPanel.setLayout(recievedMsgPanelLayout);
        recievedMsgPanelLayout.setHorizontalGroup(
            recievedMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recievedMsgPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recievedMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recievedMsgTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(recievedMsgPanelLayout.createSequentialGroup()
                        .addComponent(recievedMsgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        recievedMsgPanelLayout.setVerticalGroup(
            recievedMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, recievedMsgPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(recievedMsgTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(recievedMsgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        unitTrackingPanel.setBackground(new java.awt.Color(204, 204, 204));
        unitTrackingPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        unitTrackingPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                unitTrackingPanelMouseEntered(evt);
            }
        });

        unitStatusDisplay.setEditable(false);
        unitStatusDisplay.setBackground(new java.awt.Color(255, 255, 204));
        unitStatusDisplay.setColumns(20);
        unitStatusDisplay.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        unitStatusDisplay.setRows(5);
        unitStatusDisplay.setMaximumSize(new java.awt.Dimension(192, 79));
        unitStatusDisplay.setMinimumSize(new java.awt.Dimension(192, 79));
        unitStatusScrollPane.setViewportView(unitStatusDisplay);

        currentTrackingUnitTitle.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        currentTrackingUnitTitle.setText("Currently Tracking :  ");

        currentlyTrackingUnitLabel.setBackground(new java.awt.Color(0, 102, 51));
        currentlyTrackingUnitLabel.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        currentlyTrackingUnitLabel.setForeground(new java.awt.Color(255, 255, 255));
        currentlyTrackingUnitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentlyTrackingUnitLabel.setOpaque(true);

        unitTrackingComboBox.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N

        unitTrackingBtn.setBackground(new java.awt.Color(0, 204, 153));
        unitTrackingBtn.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        unitTrackingBtn.setText("Track Status");
        unitTrackingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitTrackingBtnActionPerformed(evt);
            }
        });

        untiStatusTrackingTitle.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        untiStatusTrackingTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        untiStatusTrackingTitle.setText("Unit Status Tracking");

        javax.swing.GroupLayout unitTrackingPanelLayout = new javax.swing.GroupLayout(unitTrackingPanel);
        unitTrackingPanel.setLayout(unitTrackingPanelLayout);
        unitTrackingPanelLayout.setHorizontalGroup(
            unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unitTrackingPanelLayout.createSequentialGroup()
                .addGroup(unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(unitTrackingPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(untiStatusTrackingTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unitTrackingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(unitStatusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(unitTrackingPanelLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(currentTrackingUnitTitle)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(currentlyTrackingUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(unitTrackingPanelLayout.createSequentialGroup()
                                    .addComponent(unitTrackingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(unitTrackingBtn))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        unitTrackingPanelLayout.setVerticalGroup(
            unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, unitTrackingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(untiStatusTrackingTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unitTrackingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitTrackingBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(unitTrackingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(currentTrackingUnitTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentlyTrackingUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unitStatusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        mainTitle.setBackground(new java.awt.Color(153, 51, 0));
        mainTitle.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        mainTitle.setForeground(new java.awt.Color(255, 255, 255));
        mainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitle.setText("Main Controller");
        mainTitle.setOpaque(true);

        warStrengthPanel.setBackground(new java.awt.Color(204, 204, 204));
        warStrengthPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        warStrengthTitle.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        warStrengthTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warStrengthTitle.setText("War Strength");

        warStrengthSlider.setBackground(new java.awt.Color(204, 204, 204));
        warStrengthSlider.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        warStrengthSlider.setMajorTickSpacing(10);
        warStrengthSlider.setMinorTickSpacing(5);
        warStrengthSlider.setPaintLabels(true);
        warStrengthSlider.setPaintTicks(true);
        warStrengthSlider.setValue(0);
        warStrengthSlider.setOpaque(true);
        warStrengthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                warStrengthSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout warStrengthPanelLayout = new javax.swing.GroupLayout(warStrengthPanel);
        warStrengthPanel.setLayout(warStrengthPanelLayout);
        warStrengthPanelLayout.setHorizontalGroup(
            warStrengthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(warStrengthPanelLayout.createSequentialGroup()
                .addGroup(warStrengthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(warStrengthPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(warStrengthTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(warStrengthPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(warStrengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        warStrengthPanelLayout.setVerticalGroup(
            warStrengthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(warStrengthPanelLayout.createSequentialGroup()
                .addComponent(warStrengthTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warStrengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        sendMsgPanel.setBackground(new java.awt.Color(204, 204, 204));
        sendMsgPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        sendMsgPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sendMsgPanelMouseEntered(evt);
            }
        });

        sendMsgTitle.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        sendMsgTitle.setText("Send to Units");

        sendMsgBtn.setBackground(new java.awt.Color(255, 204, 51));
        sendMsgBtn.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        sendMsgBtn.setText("send");
        sendMsgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMsgBtnActionPerformed(evt);
            }
        });

        sendMsgToAllUnits.setBackground(new java.awt.Color(204, 204, 204));
        msgSendOptionBtnGroup.add(sendMsgToAllUnits);
        sendMsgToAllUnits.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        sendMsgToAllUnits.setText("to All Units");
        sendMsgToAllUnits.setOpaque(true);
        sendMsgToAllUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMsgToAllUnitsActionPerformed(evt);
            }
        });

        sendMsgToSelectedUnit.setBackground(new java.awt.Color(204, 204, 204));
        msgSendOptionBtnGroup.add(sendMsgToSelectedUnit);
        sendMsgToSelectedUnit.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        sendMsgToSelectedUnit.setText("to a Selectecd Unit");
        sendMsgToSelectedUnit.setOpaque(true);
        sendMsgToSelectedUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMsgToSelectedUnitActionPerformed(evt);
            }
        });

        msgSendComboBox.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        msgSendComboBox.setToolTipText("Select a Unit");
        msgSendComboBox.setEnabled(false);

        msgToSend.setColumns(20);
        msgToSend.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        msgToSend.setLineWrap(true);
        msgToSend.setRows(5);
        sendMsgScrollPane.setViewportView(msgToSend);

        javax.swing.GroupLayout sendMsgPanelLayout = new javax.swing.GroupLayout(sendMsgPanel);
        sendMsgPanel.setLayout(sendMsgPanelLayout);
        sendMsgPanelLayout.setHorizontalGroup(
            sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendMsgPanelLayout.createSequentialGroup()
                .addGroup(sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sendMsgPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sendMsgPanelLayout.createSequentialGroup()
                                .addComponent(sendMsgToSelectedUnit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(msgSendComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(sendMsgPanelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(sendMsgTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(sendMsgBtn))
                            .addComponent(sendMsgToAllUnits)))
                    .addGroup(sendMsgPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sendMsgScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sendMsgPanelLayout.setVerticalGroup(
            sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendMsgPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendMsgTitle)
                    .addComponent(sendMsgBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendMsgToAllUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sendMsgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msgSendComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendMsgToSelectedUnit, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendMsgScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(warStrengthPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(mainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(areaStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(unitTrackingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(recievedMsgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sendMsgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(recievedMsgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(sendMsgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(areaStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(warStrengthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unitTrackingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendMsgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMsgBtnActionPerformed
        // TODO add your handling code here:
        if (!msgToSend.getText().equals("")) {
            if (sendMsgToAllUnits.isSelected()) {
                defenceObservableInterface.sendMsgtoAllUnits("Main(Public) : " + msgToSend.getText());
                msgToSend.setText("");

            } else if (sendMsgToSelectedUnit.isSelected()) {

                Object selectedUnit = msgSendComboBox.getSelectedItem();
                if (selectedUnit != null) {
                    defenceObservableInterface.sendMsgtoUnit(selectedUnit, ("Main(Private) : " + msgToSend.getText()));
                    msgToSend.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Unit Not Selected", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Option Not Selected", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Can not Send Empty Message", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sendMsgBtnActionPerformed

    private void sendMsgToAllUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMsgToAllUnitsActionPerformed
        // TODO add your handling code here:
        msgSendComboBox.setEnabled(false);
    }//GEN-LAST:event_sendMsgToAllUnitsActionPerformed

    private void sendMsgToSelectedUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMsgToSelectedUnitActionPerformed
        // TODO add your handling code here:

        msgSendComboBox.setEnabled(true);
    }//GEN-LAST:event_sendMsgToSelectedUnitActionPerformed

    private void isAreaClearedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isAreaClearedActionPerformed
        // TODO add your handling code here:
        defenceObservableInterface.sendAreaStatus(isAreaCleared.isSelected());
    }//GEN-LAST:event_isAreaClearedActionPerformed

    private void unitTrackingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitTrackingBtnActionPerformed
        // TODO add your handling code here:
        updateSelectedUnitStatus();
    }//GEN-LAST:event_unitTrackingBtnActionPerformed

    private void unitTrackingPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unitTrackingPanelMouseEntered
        // TODO add your handling code here:
        addUnitsToComboList(unitTrackingComboBox);
    }//GEN-LAST:event_unitTrackingPanelMouseEntered

    private void warStrengthSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_warStrengthSliderStateChanged
        // TODO add your handling code here:
        int value = warStrengthSlider.getValue();
        Strength strength;
        if (value == 0) {
            strength = Strength.CLOSED;
        } else if (value > 0 && value <= 40) {
            strength = Strength.LOW;
        } else if (value > 40 && value <= 60) {
            strength = Strength.MEDIUM;
        } else if (value > 60 && value <= 85) {
            strength = Strength.HIGH;
        } else {
            strength = Strength.STRONG;
        }
        defenceObservableInterface.sendStrengthToUnits(strength);
    }//GEN-LAST:event_warStrengthSliderStateChanged

    private void sendMsgPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMsgPanelMouseEntered
        // TODO add your handling code here:
        addUnitsToComboList(msgSendComboBox);
    }//GEN-LAST:event_sendMsgPanelMouseEntered

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel areaStatusPanel;
    private javax.swing.JLabel currentTrackingUnitTitle;
    private javax.swing.JLabel currentlyTrackingUnitLabel;
    private javax.swing.JCheckBox isAreaCleared;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JComboBox<Object> msgSendComboBox;
    private javax.swing.ButtonGroup msgSendOptionBtnGroup;
    private javax.swing.JTextArea msgToSend;
    private javax.swing.JTextArea recievedMsgDisplay;
    private javax.swing.JPanel recievedMsgPanel;
    private javax.swing.JScrollPane recievedMsgScrollPane;
    private javax.swing.JLabel recievedMsgTitle;
    private javax.swing.JButton sendMsgBtn;
    private javax.swing.JPanel sendMsgPanel;
    private javax.swing.JScrollPane sendMsgScrollPane;
    private javax.swing.JLabel sendMsgTitle;
    private javax.swing.JRadioButton sendMsgToAllUnits;
    private javax.swing.JRadioButton sendMsgToSelectedUnit;
    private javax.swing.JTextArea unitStatusDisplay;
    private javax.swing.JScrollPane unitStatusScrollPane;
    private javax.swing.JButton unitTrackingBtn;
    private javax.swing.JComboBox<Object> unitTrackingComboBox;
    private javax.swing.JPanel unitTrackingPanel;
    private javax.swing.JLabel untiStatusTrackingTitle;
    private javax.swing.JPanel warStrengthPanel;
    private javax.swing.JSlider warStrengthSlider;
    private javax.swing.JLabel warStrengthTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void sendStatusReport(String report) {
        unitStatusDisplay.setText(report);
    }
}
